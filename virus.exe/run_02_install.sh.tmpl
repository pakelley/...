#!/usr/bin/env bash
# Installs Brew bundles for each optional group selected during bootstrap.
# Generated by Chezmo﻿i templating – DO NOT EDIT IN $HOME.

set -euo pipefail

# Where the Brewfiles live inside the dot-files repo.  Adjust if you keep
# them elsewhere.
BREWFILE_DIR="{{ .chezmoi.sourceDir }}/dot_config/homebrew"

# Homebrew executable (use the prefix captured during bootstrap)
BREW_BIN="{{ .brewPrefix }}/bin/brew"

if [[ ! -x "$BREW_BIN" ]]; then
  echo "[homebrew] ERROR: brew executable not found at '$BREW_BIN'." >&2
  echo "           Is Homebrew installed in an unexpected prefix?"        >&2
  exit 1
fi

common_groups=(cli common emacs nushell)
for group in "${common_groups[@]}"; do
  brewfile="$BREWFILE_DIR/${group}.Brewfile"
  if [[ -f "$brewfile" ]]; then
    echo -e "\n[homebrew] → $group"
    "$BREW_BIN" bundle install --file="$brewfile"
  else
    echo "[homebrew] WARNING: '$brewfile' not found; skipping." >&2
  fi
done


env="{{ .environment }}"
case "$env" in
  home)
    home_brewfile="$BREWFILE_DIR/home.Brewfile"
    if [[ -f "$home_brewfile" ]]; then
      echo "[homebrew] Installing environment bundle: $home_brewfile"
      "$BREW_BIN" bundle install --file="$home_brewfile"
    else
      echo "[homebrew] WARNING: $home_brewfile not found; skipping." >&2
    fi
    ;;
  work)
    echo "[homebrew] No work-specific Brewfile defined; nothing to do."
    ;;
  *)
    echo "[homebrew] Unknown environment '$env'; skipping env-specific Brewfile."
    ;;
esac

# Render the Bash array from the TOML's optional_groups
# optional_groups=( {{- range $i, $g := .optionalGroups }}"{{ $g }}" {{ end }} )
optional_groups=( {{ .optionalGroups | join " " }} )

if [[ "${#optional_groups[@]}" -eq 0 ]]; then
  echo "[homebrew] No optional groups configured – nothing to do."
  exit 0
fi

echo "[homebrew] Installing bundles for groups: ${optional_groups[*]}"

for group in "${optional_groups[@]}"; do
  brewfile="$BREWFILE_DIR/${group}.Brewfile"
  if [[ -f "$brewfile" ]]; then
    echo -e "\n[homebrew] → $group"
    "$BREW_BIN" bundle install --file="$brewfile"
  else
    echo "[homebrew] WARNING: '$brewfile' not found; skipping." >&2
  fi
done

echo "[homebrew] All requested bundles processed."
